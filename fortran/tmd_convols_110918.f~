


c     *****************   gMSTW   *****************



      double precision function gMSTW(xpdf,bt)
      implicit none

      double precision xpdf,bt

      gMSTW = GetOnePDF(prefix,0,xpdf,mubfrozen(bt),0)/xpdf

      end


c     *****************   Cff   *****************


      double precision function Cff()
      implicit none

      double precision btlow,bthigh
      real*8 err1
      integer ierr1

c ... bt-integration 
      btlow = 0.00001d0   ! Sa(0)=-Infinity => error BUT exp(-Infinity)=0, so very small bt doesn't contribute to the integral value, hence the very small but non-zero btlow
      bthigh = 5d0

      Cff = dcadredo(Cff_bt,btlow,bthigh,0.d0,precision/10.,err1,ierr1)

      end


c**************************************

 
      double precision function Cff_bt(bt)
      implicit none

      double precision bt,ap,bp,cp1,cp2

c      ap=revnorm(rand()*1d0,amin,amax)
      ap=1d0
c      bp=revnorm(rand()*1d0,bmin,bmax)
      bp=1d0
c      cp1=rand_normal(gMSTW(x1,bt),sigf(x1,mubfrozen(bt)))
c      cp2=rand_normal(gMSTW(x2,bt),sigf(x2,mubfrozen(bt)))
      cp1=gMSTW(x1,bt)   ! when we don't use the bt-dep gMSTW error
      cp2=gMSTW(x2,bt)   ! when we don't use the bt-dep gMSTW error

      Cff_bt = 1d0/(2d0*pi)*bt*bessel_j0(bt*qt)*exp(-ap*Sa(bt)-bp
     &*Snp(bt))*cp1*cp2


      end



c     *****************   Chh   *****************


      double precision function Chh()
      implicit none

      double precision btlow,bthigh
      real*8 err3
      integer ierr3

c ... bt-integration 
      btlow = 0.00001d0
      bthigh = 5d0

      Chh = dcadredo3(Chh_bt,btlow,bthigh,0.d0,precision/10.,err3,ierr3)

      end


c**************************************


      double precision function Chh_bt(bt)
      implicit none

      double precision y1min,y1max,bt
      real*8 err2
      integer ierr2

      vbt=bt

c ... y1-integration 
      y1min = x1
      y1max = 1d0

      Chh_bt = dcadredo2(Chh_bt_y1,y1min,y1max,0.d0,precision/10.,
     &err2,ierr2)

      end


c**************************************


      double precision function Chh_bt_y1(y1)
      implicit none

      double precision y2min,y2max,y1
      real*8 err1
      integer ierr1

      vy1=y1

c ... y2-integration 
      y2min = x2
      y2max = 1d0

      Chh_bt_y1 = dcadredo(Chh_bt_y1_y2,y2min,y2max,0.d0,precision/10.,
     &err1,ierr1)

      end


c**************************************

 
      double precision function Chh_bt_y1_y2(y2)
      implicit none

      double precision y2,ap,bp,cp1,cp2

c      ap=revnorm(rand()*1d0,amin,amax)
      ap=1d0
c      bp=revnorm(rand()*1d0,bmin,bmax)
      bp=1d0
c      cp1=rand_normal(gMSTW(vy1,vbt),sigf(x1,mubfrozen(vbt)))
c      cp2=rand_normal(gMSTW(y2,vbt),sigf(x2,mubfrozen(vbt)))
      cp1=gMSTW(vy1,vbt)   ! when we don't use the bt-dep gMSTW error
      cp2=gMSTW(y2,vbt)   ! when we don't use the bt-dep gMSTW error

      Chh_bt_y1_y2 = 1d0/(2d0*pi)*vbt*bessel_j0(vbt*qt)*exp(-ap*Sa(vbt)-
     &bp*Snp(vbt))*(Nc*alphas(vbt)/pi)**2*(1d0/x1-1d0/vy1)*cp1*
     &(1d0/x2-1d0/y2)*cp2

      end


c     *****************   Cw3afh   *****************



      double precision function Cw3afh()
      implicit none

      double precision btlow,bthigh
      real*8 err2
      integer ierr2

c ... bt-integration 
      btlow = 0.00001d0
      bthigh = 5d0

      Cw3afh = dcadredo2(Cw3afh_bt,btlow,bthigh,0.d0,precision/10.,
     &err2,ierr2)

      end


c**************************************


      double precision function Cw3afh_bt(bt)
      implicit none

      double precision y1min,y1max,bt
      real*8 err1
      integer ierr1

      vbt=bt

c ... y1-integration 
      y1min = x1
      y1max = 1d0

      Cw3afh_bt = dcadredo(Cw3afh_bt_y1,y1min,y1max,0.d0,precision/10.,
     &err1,ierr1)

      end


c**************************************

 
      double precision function Cw3afh_bt_y1(y1)
      implicit none

      double precision y1,ap,bp,cp1,cp2

c      ap=revnorm(rand()*1d0,amin,amax)
      ap=1d0
c      bp=revnorm(rand()*1d0,bmin,bmax)
      bp=1d0
c      cp1=rand_normal(gMSTW(y1,vbt),sigf(x1,mubfrozen(vbt)))
c      cp2=rand_normal(gMSTW(x2,vbt),sigf(x2,mubfrozen(vbt)))
      cp1=gMSTW(y1,vbt)   ! when we don't use the bt-dep gMSTW error
      cp2=gMSTW(x2,vbt)   ! when we don't use the bt-dep gMSTW error

      Cw3afh_bt_y1=1d0/(2d0*pi)*vbt*bessel_jn(2,vbt*qt)*exp(-ap*Sa(vbt)-
     &bp*Snp(vbt))*(Nc*alphas(vbt)/pi)*(1d0/x1-1d0/y1)*cp1*cp2

      end


c     *****************   Cw3bhf   *****************



      double precision function Cw3bhf()
      implicit none

      double precision btlow,bthigh
      real*8 err2
      integer ierr2

c ... bt-integration 
      btlow = 0.00001d0
      bthigh = 5d0

      Cw3bhf = dcadredo2(Cw3bhf_bt,btlow,bthigh,0.d0,precision/10.,
     &err2,ierr2)

      end


c**************************************


      double precision function Cw3bhf_bt(bt)
      implicit none

      double precision y2min,y2max,bt
      real*8 err1
      integer ierr1

      vbt=bt

c ... y2-integration 
      y2min = x2
      y2max = 1d0

      Cw3bhf_bt = dcadredo(Cw3bhf_bt_y2,y2min,y2max,0.d0,precision/10.,
     &err1,ierr1)

      end


c**************************************

 
      double precision function Cw3bhf_bt_y2(y2)
      implicit none

      double precision y2,ap,bp,cp1,cp2

c      ap=revnorm(rand()*1d0,amin,amax)
      ap=1d0
c      bp=revnorm(rand()*1d0,bmin,bmax)
      bp=1d0
c      cp1=rand_normal(gMSTW(x1,vbt),sigf(x1,mubfrozen(vbt)))
c      cp2=rand_normal(gMSTW(y2,vbt),sigf(x2,mubfrozen(vbt)))
      cp1=gMSTW(x1,vbt)   ! when we don't use the bt-dep gMSTW error
      cp2=gMSTW(y2,vbt)   ! when we don't use the bt-dep gMSTW error

      Cw3bhf_bt_y2=1d0/(2d0*pi)*vbt*bessel_jn(2,vbt*qt)*exp(-ap*Sa(vbt)-
     &bp*Snp(vbt))*(Nc*alphas(vbt)/pi)*(1d0/x2-1d0/y2)*cp2*cp1

      end


c     *****************   Cw4hh   *****************


      double precision function Cw4hh()
      implicit none

      double precision btlow,bthigh
      real*8 err3
      integer ierr3

c ... bt-integration 
      btlow = 0.00001d0
      bthigh = 5d0

      Cw4hh = dcadredo3(Cw4hh_bt,btlow,bthigh,0.d0,precision/10.,err3,
     &ierr3)

      end


c**************************************


      double precision function Cw4hh_bt(bt)
      implicit none

      double precision y1min,y1max,bt
      real*8 err2
      integer ierr2

      vbt=bt

c ... y1-integration 
      y1min = x1
      y1max = 1d0

      Cw4hh_bt = dcadredo2(Cw4hh_bt_y1,y1min,y1max,0.d0,precision/10.,
     &err2,ierr2)

      end


c**************************************


      double precision function Cw4hh_bt_y1(y1)
      implicit none

      double precision y2min,y2max,y1
      real*8 err1
      integer ierr1

      vy1=y1

c ... y2-integration 
      y2min = x2
      y2max = 1d0

      Cw4hh_bt_y1 = dcadredo(Cw4hh_bt_y1_y2,y2min,y2max,0.d0,
     &precision/10.,err1,ierr1)

      end


c**************************************

 
      double precision function Cw4hh_bt_y1_y2(y2)
      implicit none

      double precision y2,ap,bp,cp1,cp2

c      ap=revnorm(rand()*1d0,amin,amax)
      ap=1d0
c      bp=revnorm(rand()*1d0,bmin,bmax)
      bp=1d0
c      cp1=rand_normal(gMSTW(vy1,vbt),sigf(x1,mubfrozen(vbt)))
c      cp2=rand_normal(gMSTW(y2,vbt),sigf(x2,mubfrozen(vbt)))
      cp1=gMSTW(vy1,vbt)   ! when we don't use the bt-dep gMSTW error
      cp2=gMSTW(y2,vbt)   ! when we don't use the bt-dep gMSTW error

      Cw4hh_bt_y1_y2 = 1d0/(2d0*pi)*vbt*bessel_jn(4,vbt*qt)*exp(-ap*
     &Sa(vbt)-bp*Snp(vbt))*(Nc*alphas(vbt)/pi)**2*(1d0/x1-1d0/vy1)*
     &cp1*(1d0/x2-1d0/y2)*cp2

      end
