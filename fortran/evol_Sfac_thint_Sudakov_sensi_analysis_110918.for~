c TO RUN THE SCRIPT, USE COMMAND : gfortran -c par_estimators_041018.for && gfortran evol_Sfac_thint_Sudakov_sensi_analysis_110918.for par_estimators_041018.o && ./a.out

C REQUIRED FILES : tmd_convols_110918.f, tmd_sudakovs_110918.f, tmd_scales_110918.f, par_estimators_041018.mod, F100_ctheta_evol_130818.f', F20_ctheta_evol_130818.f', F300a_ctheta_evol_130818.f', F300b_ctheta_evol_130818.f', F40_ctheta_evol_130818.f'
c REQUIRED PACKAGES : dcadredo,...,dcadredo3, MSTW2008




      program jpsijpsi
      use par_estimators_041018
      implicit none

      double precision qtmin,dqt,qtmax
      double precision ctmin,ctmax
      double precision R0,R2a,R2b,R4
      double precision acc
      double precision V1Cff,S1Cff,Vt1Cff,St1Cff,V2Cff,S2Cff,Vt2Cff,
     &St2Cff,V3Cff,S3Cff,Vt3Cff,St3Cff,S12Cff,S13Cff,S23Cff,meanCff,
     &varCff,meanChh,varChh,meanCw3afh,varCw3afh,meanCw3bhf,varCw3bhf,
     &meanCw4hh,varCw4hh
      integer Nsamp,Nmv,dps,i,j
      double precision Qlist(3), qtlist(106)
      character strSud*14,strx1*10,strx2*10

      Nc = 3d0
      nf = 5d0
      b0 = 1.12292d0
      Q0 = 1d0
      Lambda = 0.217d0
      pi = dacos(-1.d0)
      M=3.0969d0
      R0Jpsi=sqrt(0.81d0)
      phid=0d0
      g0=0.3d0

      precision=1d-2

      Qlist=(/8.0,12.0,21.0/)

      qtmin=0d0
      dqt=0.5d0

      do i = 1, size(qtlist)

         qtlist(i)=(qtmin+(i-1)*dqt)

      end do

c      amin=0.5d0
c      amax=2d0
c      bmin=0.5d0
c      bmax=2d0



      write(6,*) char(10),'---------------------------------------------
     &---------------------',char(10),char(9),'UNPOLARISED DOUBLE J/psi 
     &Sthint WITH EVOLVED TMDs',char(10),'------------------------------
     &------------------------------------',char(10)



      x1=1d-2
      x2=1d-2
      write(6,*) 'x1        x2'
      write(6,"(A,1pe8.2,2x,1pe8.2,2x,A)") ' ',x1,x2,char(10)
      xxpdf=x1*x2
      write(strx1,'(1pe8.2,2x)') x1
      write(strx2,'(1pe8.2,2x)') x2

      prefix = "PAR_MSTW2008/Grids/mstw2008lo"

c      btmax = 0.5d0

c      write(6,*) char(10),'Snp=>SnpBLNY (BLNY)'
c      write(strSud,"(A)") 'SnpBLNY'
c      Snp=>SnpBLNY   ! Here we fix Snp in the convolutions to refer to the SnpBLNY definiton
c      call ComputeRatios()

      btmax = 1.5d0

c      write(6,*) char(10),'Snp=>SnpKN (Konychev-Nadolski)'
c      write(strSud,"(A)") 'SnpKN'
c      Snp=>SnpKN
c      call ComputeRatios()

c      write(6,*) char(10),'Snp=>SnpAR (Aybat-Rogers)'
c      Snp=>SnpAR
c       write(strSud,"(A)") 'SnpAR'
c      call ComputeRatios()

c      write(6,*) char(10),'Snp=>SnpCRsimp (Collins-Rogers at btmax=btmax
c     &0=1.5GeV^-1)'
c      write(strSud,"(A)") 'SnpCRsimp'
c      Snp=>SnpCRsimp
c      call ComputeRatios()



      write(6,*) char(10),'Snp=>SnpARfit (Aybat-Rogers fit to LHCb13)'
      Snp=>SnpARfit
      write(strSud,"(A)") 'SnpARfit'
      call ComputeRatios()

      write(6,*) char(10),'Snp=>SnpCRsimpfit (Collins-Rogers at btmax=bt
     &max0=1.5GeV^-1 fit to LHCb13)'
      write(strSud,"(A)") 'SnpCRsimpfit'
      Snp=>SnpCRsimpfit
      call ComputeRatios()

      write(6,*) char(10),'Snp=>SnpCRsimpfit2 (Collins-Rogers at btmax=b
     &tmax0=1.5GeV^-1 fit to LHCb13)'
      write(strSud,"(A)") 'SnpCRsimpfit2'
      Snp=>SnpCRsimpfit2
      call ComputeRatios()

      write(6,*) char(10),'Snp=>Snp2fit (type sqrt(bt²-btmax²)-btmax fit
     & to LHCb13)'
      Snp=>Snp2fit
       write(strSud,"(A)") 'Snp2fit'
      call ComputeRatios()



      contains

      subroutine ComputeRatios()
      implicit none

      character strQ*10
      double precision Cval(106,5)

      do i = 1, size(Qlist)

         Q = Qlist(i)

         qtmax=Q/2d0

         write(6,*) char(10),'---------------'
         write(6,"(A,F0.1,A)") ' Q = ',Q,' GeV',char(10)
         write (6,*)'#qt          Cff         Chh         Cw3afh      Cw
     &4hh       Chh/Cff     Cw3afh/Cff  Cw4hh/Cff'

         write(strQ,'(F0.1)') Q
         open(unit=10,file='ratiodata/convols_Q'//strQ(1:lentrim(strQ))
     &//'_'//strSud(1:lentrim(strSud))//'_091018.dat')
         open(unit=11,file='ratiodata/ratios_Q'//strQ(1:lentrim(strQ))//
     &'_'//strSud(1:lentrim(strSud))//'_091018.dat')
         write(10,*) '#Evolved convols at Q='//strQ(1:lentrim(strQ))//'G
     &eV, x1='//strx1//', x2='//strx2//' and Snp='//strSud(1:lentrim(str
     &Sud))
         write(11,*) '#Evolved convols ratios at Q='//strQ(1:lentrim(
     &strQ))//'GeV, x1='//strx1//', x2='//strx2//' and Snp='//strSud(1:
     &lentrim(strSud))
         write (10,*)'#qt          Cff         Chh         Cw3afh      C
     &w4hh'
         write (11,*)'#qt          Chh/Cff     Cw3afh/Cff  Cw4hh/Cff'

         do j = 1,size(qtlist)

            qt=qtlist(j)

            if (qt.le.qtmax) then

               Cval(j,1)=Cff()
               Cval(j,2)=Chh()
               Cval(j,3)=Cw3afh()
               Cval(j,4)=Cw4hh()

               write(6,16) qt,Cval(j,1),Cval(j,2),Cval(j,3),Cval(j,4),
     &         Cval(j,2)/Cval(j,1),Cval(j,3)/Cval(j,1),
     &         Cval(j,4)/Cval(j,1)

               write(10,16) qt,Cval(j,1),Cval(j,2),Cval(j,3),Cval(j,4)
               write(11,16) qt,Cval(j,2)/Cval(j,1),Cval(j,3)/Cval(j,1),
     &         Cval(j,4)/Cval(j,1)

            else

               goto 12

            end if

 12      end do

         close(10)
         close(11)

      end do


 16   format(8(1pe10.2,2x))


      end subroutine ComputeRatios


c      Q=8d0
c      qt=3d0
c      Nsamp=500
c      Nmv=1
c      dps=3
c      acc=2E-1

c      write (6,*) ' Nsamp   Nmv   acc'
c      write(6,"(I5,A,I5,A,1pe8.2,2x)") Nsamp,char(9),Nmv,char(9),acc

c      write(6,*) char(10),char(10),'----------',char(10),'  Cff',
c     &char(10),'----------',char(10)
c      call convMeanVar(Nmv,dps,acc,Cff,meanCff,varCff)
c      write(6,*) char(10),char(10),'----------',char(10),'  Chh',
c     &char(10),'----------',char(10)
c      call convMeanVar(Nmv,dps,acc,Chh,meanChh,varChh)
c      write(6,*) char(10),char(10),'----------',char(10),'  Cw3afh',
c     &char(10),'----------',char(10)
c      call convMeanVar(Nmv,dps,acc,Cw3afh,meanCw3afh,varCw3afh)
c      write(6,*) char(10),char(10),'----------',char(10),'  Cw3bhf',
c     &char(10),'----------',char(10)
c      call convMeanVar(Nmv,dps,acc,Cw3bhf,meanCw3bhf,varCw3bhf)     IDENTICAL TO Cw3afh AT x1=x2
c      write(6,*) char(10),char(10),'----------',char(10),'  Cw4hh',
c     &char(10),'----------',char(10)
c      call convMeanVar(Nmv,dps,acc,Cw4hh,meanCw4hh,varCw4hh)

c      call convEstim(1,Nsamp,dps,acc,Cff,'Vi ',V1Cff,S1Cff,meanCff,
c     &varCff)
c      call convEstim(1,Nsamp,dps,acc,Cff,'Vti ',Vt1Cff,St1Cff,meanCff,
c     &varCff)
c      call convEstim(2,Nsamp,dps,acc,Cff,'Vi ',V2Cff,S2Cff,meanCff,
c     &varCff)
c      call convEstim(2,Nsamp,dps,acc,Cff,'Vti ',Vt2Cff,St2Cff,meanCff,
c     &varCff)
c      call convEstim(3,Nsamp,dps,acc,Cff,'Vi ',V3Cff,S3Cff,meanCff,
c     &varCff)
c      call convEstim(3,Nsamp,dps,acc,Cff,'Vti ',Vt3Cff,St3Cff,meanCff,
c     &varCff)
c      S12Cff=Sij(S1Cff,S2Cff,S3Cff,St1Cff,St2Cff,St3Cff)
c      S13Cff=Sij(S1Cff,S3Cff,S2Cff,St1Cff,St3Cff,St2Cff)
c      S23Cff=Sij(S2Cff,S3Cff,S1Cff,St2Cff,St3Cff,St1Cff)
c      write(6,*) '  S12         S13         S23'
c      write(6,16) S12Cff,S13Cff,S23Cff


c      call convEstim(1,Nsamp,dps,acc,Cw4hh,'Vi ',V1Cff,S1Cff,meanCff,
c     &varCff)



      end



