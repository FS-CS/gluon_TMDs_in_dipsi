      program test_move_alloc
      implicit none
          integer, allocatable :: a(:), b(:)

          allocate(a(3))
          a = [ 1, 2, 3 ]
          call move_alloc(a, b)                  ! allocates b the size of a, puts a's values inside of b, then desallocates a
          print *, allocated(a), allocated(b)    ! a has been desallocated => allocated(a) returns False ; allocated(b) returns True
          print *, b                             ! b indeed has former a's values
      end program test_move_alloc
